{"version":3,"sources":["sd-keen-vis.es6.js"],"names":["Polymer","is","properties","counterValue","type","Number","value","notify","project","String","readKey","collection","analysisType","timeframe","interval","observers","created","config","ready","Keen","console","log","_initClient","bind","attached","_updateQuery","client","projectId","query","Query","event_collection","_runQuery","run","err","res","handleClick","event","detail","sender","increment"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,aAFE,CAINC,WAAY,CAMRC,aAAc,CACVC,KAAMC,MADI,CAEVC,MAAO,CAFG,CAGVC,OAAQ,IAHE,CANN,CAWRC,QAAS,CACLJ,KAAMK,MADD,CAXD,CAcRC,QAAS,CACLN,KAAMK,MADD,CAdD,CAiBRE,WAAY,CACRP,KAAMK,MADE,CAjBJ,CAoBRG,aAAc,CACVR,KAAMK,MADI,CApBN,CAuBRI,UAAW,CACPT,KAAMK,MADC,CAvBH,CA0BRK,SAAU,CACNV,KAAMK,MADA,CA1BF,CAJN,CAkCNM,UAAW,CAEP,2BAFO,CAGP,wCAHO,CAlCL,CAuCNC,QAAS,kBAAW,CAChB,KAAKC,MAAL,CAAc,EACjB,CAzCK,CA0CNC,MAAO,gBAAW,CACdC,KAAKD,KAAL,CAAW,UAAW,CAClBE,QAAQC,GAAR,CAAY,aAAZ,EACA,KAAKC,WAAL,EACH,CAHU,CAGTC,IAHS,CAGJ,IAHI,CAAX,CAIH,CA/CK,CAgDNC,SAAU,mBAAW,CAClB,KAAKC,YAAL,EACF,CAlDK,CAmDNH,YAAa,sBAAW,CACpBF,QAAQC,GAAR,CAAY,YAAZ,EACA,KAAKK,MAAL,CAAc,GAAIP,KAAJ,CAAS,CACnBQ,UAAW,KAAKnB,OADG,CAEnBE,QAAS,KAAKA,OAFK,CAAT,CAIjB,CAzDK,CA0DNe,aAAc,uBAAW,CACrB,GAAI,KAAKC,MAAT,CAAiB,CACb,KAAKE,KAAL,CAAa,GAAIT,MAAKU,KAAT,CAAe,KAAKjB,YAApB,CAAkC,CAC3CkB,iBAAkB,KAAKnB,UADoB,CAE3CE,UAAW,KAAKA,SAF2B,CAI3CC,SAAU,KAAKA,QAJ4B,CAAlC,CAAb,CAQAM,QAAQC,GAAR,CAAY,KAAKO,KAAjB,EACA,KAAKG,SAAL,EACH,CACJ,CAvEK,CAwENA,UAAW,oBAAW,CAClB,GAAI,KAAKL,MAAT,CAAiB,CACb,KAAKA,MAAL,CAAYM,GAAZ,CAAgB,KAAKJ,KAArB,CAA4B,SAASK,GAAT,CAAcC,GAAd,CAAkB,CAC1C,GAAID,GAAJ,CAAS,CAELb,QAAQC,GAAR,CAAY,eAAZ,EACAD,QAAQC,GAAR,CAAYY,GAAZ,CACH,CAJD,IAKK,CACDb,QAAQC,GAAR,CAAYa,GAAZ,CACH,CACJ,CATD,CAUH,CACJ,CArFK,CA4FNC,YAAa,qBAASC,KAAT,CAAgBC,MAAhB,CAAwBC,MAAxB,CAAgC,CAC3C,KAAKC,SAAL,EACD,CA9FK,CAqGNA,UAAW,oBAAW,CACpB,KAAKpC,YAAL,EACD,CAvGK,CAAR,CAyGD,CA1GD","file":"sd-keen-vis.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'sd-keen-vis',\n\n    properties: {\n        /**\n        * This property keeps track of the number of clicks.\n        *\n        * @property counterValue\n        */\n        counterValue: {\n            type: Number,\n            value: 0,\n            notify: true\n        },\n        project: {\n            type: String\n        },\n        readKey: {\n            type: String\n        },\n        collection: {\n            type: String\n        },\n        analysisType: {\n            type: String\n        },\n        timeframe: {\n            type: String\n        },\n        interval: {\n            type: String\n        }\n    },\n    observers: [\n        //TODO -- these three should be an object\n        '_initClient(project, key)',\n        '_updateQuery(collection, analysisType)'\n    ],\n    created: function() {\n        this.config = {};\n    },\n    ready: function() {\n        Keen.ready(function() {\n            console.log('Keen ready.');\n            this._initClient();\n        }.bind(this));\n    },\n    attached: function() {\n       this._updateQuery();\n    },\n    _initClient: function() {\n        console.log('initClient');\n        this.client = new Keen({\n            projectId: this.project,\n            readKey: this.readKey\n        });\n    },\n    _updateQuery: function() {\n        if (this.client) {\n            this.query = new Keen.Query(this.analysisType, {\n                event_collection: this.collection,\n                timeframe: this.timeframe,\n                //targetProperty: this.property,\n                interval: this.interval\n                //groupBy: this.group,\n                //filters: this.filters\n            });\n            console.log(this.query);\n            this._runQuery();\n        }\n    },\n    _runQuery: function() {\n        if (this.client) {\n            this.client.run(this.query, function(err, res){\n                if (err) {\n                    // there was an error!\n                    console.log('Stupid error.')\n                    console.log(err);\n                }\n                else {\n                    console.log(res)\n                }\n            });\n        }\n    },\n\n    /**\n    * Handles click on the element defined in 'on-click' on the template.\n    *\n    * @method handleClick\n    */\n    handleClick: function(event, detail, sender) {\n      this.increment();\n    },\n\n    /**\n    * Increments the counter\n    *\n    * @method increment\n    */\n    increment: function() {\n      this.counterValue++;\n    }\n  });\n})();\n"]}