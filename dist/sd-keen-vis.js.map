{"version":3,"sources":["sd-keen-vis.es6.js"],"names":["Polymer","is","properties","counterValue","type","Number","value","notify","project","String","readKey","collection","targetProperty","groupBy","Array","filters","analysisType","timeframe","interval","yTitle","chartYTitle","readOnly","chartData","Object","reflectToAttribute","observers","created","chartConfig","seriesConfig","ready","Keen","console","log","bind","attached","_configureChart","_updateQuery","_initClient","client","projectId","_setChartYTitle","query","Query","event_collection","group","_runQuery","run","err","res","result","_","map","n","parseInt","moment","end","format","_setChartData","handleClick","event","detail","sender","increment"],"mappings":"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","file":"sd-keen-vis.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'sd-keen-vis',\n\n    properties: {\n        /**\n        * This property keeps track of the number of clicks.\n        *\n        * @property counterValue\n        */\n        counterValue: {\n            type: Number,\n            value: 0,\n            notify: true\n        },\n        project: {\n            type: String\n        },\n        readKey: {\n            type: String\n        },\n        collection: {\n            type: String\n        },\n        targetProperty: {\n            type: String\n        },\n        groupBy: {\n            type: Array,\n            value: function() {\n                return []\n            }\n        },\n        filters: {\n            type: Array,\n            value: function() {\n                return []\n            }\n        },\n        analysisType: {\n            type: String\n        },\n        timeframe: {\n            type: String\n        },\n        interval: {\n            type: String\n        },\n        yTitle: {\n            type: String,\n            value: 'Hello'\n        },\n        chartYTitle: {\n            type: String,\n            value: '',\n            notify: true,\n            readOnly: true\n        },\n        chartData: {\n            type: Object,\n            notify: true,\n            reflectToAttribute: true,\n            value: function() {\n                return {}\n            },\n            readOnly: true\n        }\n    },\n    observers: [\n        '_initClient(project, key)',\n        '_updateQuery(collection, analysisType)'\n    ],\n    created: function() {\n        this.chartConfig = {\n            seriesConfig: {}\n        };\n    },\n    ready: function() {\n        Keen.ready(function() {\n            // TODO -- maybe move this out to updateQuery\n            console.log('Keen ready');\n        }.bind(this));\n    },\n    attached: function() {\n       console.log('attached');\n       this._configureChart();\n       this._updateQuery();\n    },\n    _initClient: function() {\n        console.log('initClient');\n        this.client = new Keen({\n            projectId: this.project,\n            readKey: this.readKey\n        });\n       this._updateQuery();\n    },\n    _configureChart: function() {\n        this._setChartYTitle({\n            \"title\": this.yTitle,\n            \"titleTruncation\": false\n        });\n    },\n    _updateQuery: function() {\n        if (!this.client) {\n            this._initClient()\n        }\n        else {\n            this.query = new Keen.Query(this.analysisType, {\n                event_collection: this.collection,\n                timeframe: this.timeframe,\n                targetProperty: this.targetProperty,\n                interval: this.interval,\n                groupBy: this.group,\n                //filters: this.filters\n            });\n            console.log(this.query);\n            this._runQuery();\n        }\n    },\n    _runQuery: function() {\n        if (this.client) {\n            this.client.run(this.query, function(err, res){\n                if (err) {\n                    // there was an error!\n                    console.log(err);\n                }\n                else {\n                    console.log(res.result);\n                    var result = res.result;\n                    result = _.map(result, function(n) {\n                        n = {\n                            'x': parseInt(moment(n.timeframe.end).format('x')),\n                            'y': n.value\n                        }\n                        return n;\n                    })\n                    this._setChartData(result);\n                }\n            }.bind(this));\n        }\n    },\n\n    /**\n    * Handles click on the element defined in 'on-click' on the template.\n    *\n    * @method handleClick\n    */\n    handleClick: function(event, detail, sender) {\n      this.increment();\n    },\n\n    /**\n    * Increments the counter\n    *\n    * @method increment\n    */\n    increment: function() {\n      this.counterValue++;\n    }\n  });\n})();\n"]}